---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.spec.elasticSearch.serviceName }}
  labels:
    app: elastic
spec:
  selector:
    app: elastic
  clusterIP: None
  ports:
    - name: elastic-port
      port: 9200
    - name: internode-port
      port: 9300

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elastic
spec:
  replicas: {{ .Values.spec.elasticSearch.replicas }}
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: esdata
      labels:
        app: elastic
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.ebsStorageClass.name }}
      resources:
        requests:
          storage: {{ .Values.spec.elasticSearch.volumeClaim }}
  serviceName: {{ .Values.spec.elasticSearch.serviceName }}
  selector:
    matchLabels:
      app: elastic
  template:
    metadata:
      labels:
        app: elastic
    spec:
      containers:
        {{if ge ((regexFind "[0-9]{1,}\\.[0-9]{1,}" .Values.germain.build) | float64) 2023.3 }}
        - image: "{{ .Values.spec.elasticSearch.name }}:{{ .Values.spec.elasticSearch.latestTag }}"
        {{ else }}
        - image: "{{ .Values.spec.elasticSearch.name }}:{{ .Values.spec.elasticSearch.legacyTag }}"
        {{ end }}
          imagePullPolicy: {{ .Values.germain.pullPolicy }}
          name: elasticsearch
          resources:
            requests:
              memory: {{ .Values.spec.elasticSearch.memoryRequest }}
              cpu: {{ .Values.spec.elasticSearch.cpuRequest }}
            limits:
              memory: {{ .Values.spec.elasticSearch.memoryLimit }}
              cpu: {{ .Values.spec.elasticSearch.cpuLimit }}
          volumeMounts:
          - name: esdata
            mountPath: /usr/share/elasticsearch/data
          ports:
            - containerPort: 9200
              name: elastic-port
              protocol: TCP
            - containerPort: 9300
              name: internode-port
              protocol: TCP
          env:
            - name: cluster.name
              value: germain-es-cluster
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: discovery.seed_hosts
              value: {{ printf "%s%s" "elastic-" (join ",elastic-" (until (.Values.spec.elasticSearch.replicas | int))) | replace "," (printf ".%s," .Values.spec.elasticSearch.serviceName) }}.{{.Values.spec.elasticSearch.serviceName}}
            - name: cluster.initial_master_nodes
              value: {{ printf "%s%s" "elastic-" (join ",elastic-" (until (.Values.spec.elasticSearch.replicas | int))) }}
            - name: xpack.security.enabled
              value: "false"
            - name: bootstrap.memory_lock
              value: "true"
            - name: http.max_content_length
              value: "150MB"
          lifecycle:
            postStart:
              exec:
              {{ if ge ((regexFind "[0-9]{1,}\\.[0-9]{1,}" .Values.germain.build) | float64) 2023.3 }}
                command: ["/bin/sh", "-c", "cd /usr/share/elasticsearch/plugins && curl -L https://github.com/germainsoftware/germain-es-plugin/releases/download/v{{.Values.spec.elasticSearch.latestTag}}/germainapm-es-plugin-{{.Values.spec.elasticSearch.latestTag}}.zip --output germainapm-es-plugin.zip && unzip -d germainapm-es-plugin germainapm-es-plugin.zip && rm -f germainapm-es-plugin.zip"]
              {{ else }}
                command: ["/bin/sh", "-c", "cd /usr/share/elasticsearch/plugins && curl -L https://github.com/germainsoftware/germain-es-plugin/releases/download/v{{.Values.spec.elasticSearch.legacyTag}}/germainapm-es-plugin-{{.Values.spec.elasticSearch.legacyTag}}.zip --output germainapm-es-plugin.zip && unzip -d germainapm-es-plugin germainapm-es-plugin.zip && rm -f germainapm-es-plugin.zip"]
              {{ end }}
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: esdata
          mountPath: /usr/share/elasticsearch/data
      - name: increase-vm-max-map
        image: busybox
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      - name: increase-fd-ulimit
        image: busybox
        command: ["sh", "-c", "ulimit -n 65536"]
        securityContext:
          privileged: true